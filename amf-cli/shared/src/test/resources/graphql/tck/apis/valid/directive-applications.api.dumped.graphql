type Query {
  rootField: String @example(text: Jorge)
}
enum MyEnum @example(text: Jorge) {
  MyEnumValue @example(text: Jorge)
}
type MyObject2 {
  myField2: String
}
interface MyInterface @example(text: Jorge) {
  myField: String!
}
type MyInputObject @example(text: Jorge) {
  myField: String! @example(text: Jorge)
}
scalar MyScalar @example(text: Jorge)
type MyObject @example(text: Jorge) {
  myField(myArgument: String @example(text: Jorge)): String! @example(text: Jorge)
}
union MyUnion @example(text: Jorge) = MyObject | MyObject2
