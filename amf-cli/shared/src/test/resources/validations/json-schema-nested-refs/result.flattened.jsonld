{
  "@graph": [
    {
      "@id": "#40",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.2.0",
      "doc:transformed": true,
      "apiContract:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#41",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "some title",
      "core:description": "some description",
      "apiContract:server": [
        {
          "@id": "#42"
        }
      ],
      "apiContract:accepts": [
        "application/json"
      ],
      "apiContract:contentType": [
        "application/json"
      ],
      "core:version": "1.0",
      "smaps": {
        "single-value-array": {
          "apiContract:contentType": "",
          "apiContract:accepts": ""
        },
        "lexical": {
          "core:version": "[(5,0)-(6,0)]",
          "apiContract:accepts": "[(6,0)-(7,0)]",
          "core:description": "[(7,0)-(9,0)]",
          "#41": "[(2,0)-(16,0)]",
          "core:name": "[(4,0)-(5,0)]",
          "apiContract:server": "[(2,0)-(4,0)]",
          "apiContract:contentType": "[(6,0)-(7,0)]"
        },
        "source-vendor": {
          "#41": "RAML 1.0"
        }
      }
    },
    {
      "@id": "#42",
      "@type": [
        "apiContract:Server",
        "doc:DomainElement"
      ],
      "core:urlTemplate": "uri",
      "smaps": {
        "lexical": {
          "core:urlTemplate": "[(2,0)-(4,0)]"
        },
        "synthesized-field": {
          "#42": "true"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#1"
        },
        {
          "@id": "#6"
        }
      ],
      "doc:declares": [
        {
          "@id": "#8"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#41"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#40"
      }
    },
    {
      "@id": "#1",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#5"
      },
      "doc:references": [
        {
          "@id": "#2"
        }
      ],
      "doc:root": false,
      "doc:processingData": {
        "@id": "#3"
      }
    },
    {
      "@id": "#6",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#7"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#3"
      }
    },
    {
      "@id": "#8",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#19"
        },
        {
          "@id": "#29"
        },
        {
          "@id": "#35"
        },
        {
          "@id": "#37"
        }
      ],
      "shacl:name": "someType",
      "apiContract:examples": [
        {
          "@id": "#9"
        }
      ],
      "doc:reference-id": [
        {
          "@id": "#5"
        }
      ],
      "smaps": {
        "inheritance-provenance": {
          "doc:reference-id": "amf://id#18"
        },
        "declared-element": {
          "#8": ""
        },
        "lexical": {
          "apiContract:examples": "[(12,4)-(16,0)]",
          "#8": "[(10,11)-(16,0)]"
        },
        "inherited-shapes": {
          "#8": "amf://id#39"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\r\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\r\n  \"type\": \"object\",\r\n  \"additionalProperties\": false,\r\n  \"properties\": {\r\n    \"merchant\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"operator\": {\r\n      \"type\": \"string\"\r\n    },\r\n\r\n    \"primaryApplicant\": {\r\n      \"$ref\": \"definitions.json#/applicant\"\r\n    },\r\n    \"additionalApplicants\": {\r\n      \"$ref\": \"definitions.json#/applicant\"\r\n    }\r\n  },\r\n  \"required\": [\r\n    \"merchant\",\r\n    \"operator\"\r\n  ]\r\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#5": "[(1,0)-(24,1)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#4"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#3"
      }
    },
    {
      "@id": "#3",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    },
    {
      "@id": "#7",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\n  \"additionalApplicants\": {\n    \"addresses\": {\n      \"randomKey\": \"Current\"\n    },\n    \"expenses\": {\n      \"otherRandomKey\": \"Basic\"\n    }\n  },\n  \"merchant\": \"STRATTON - QLD\",\n  \"operator\": \"kenandrajog_adm\"\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#7": "[(1,0)-(12,1)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#primaryApplicant"
        }
      ],
      "raml-shapes:range": {
        "@id": "#20"
      },
      "shacl:minCount": 0,
      "shacl:name": "primaryApplicant",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#19": "[(13,4)-(15,5)]"
        },
        "inheritance-provenance": {
          "#19": "amf://id#18"
        }
      }
    },
    {
      "@id": "#29",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#additionalApplicants"
        }
      ],
      "raml-shapes:range": {
        "@id": "#30"
      },
      "shacl:minCount": 0,
      "shacl:name": "additionalApplicants",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#29": "[(16,4)-(18,5)]"
        },
        "inheritance-provenance": {
          "#29": "amf://id#18"
        }
      }
    },
    {
      "@id": "#35",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#merchant"
        }
      ],
      "raml-shapes:range": {
        "@id": "#36"
      },
      "shacl:minCount": 1,
      "shacl:name": "merchant",
      "smaps": {
        "inheritance-provenance": {
          "#35": "amf://id#18"
        },
        "lexical": {
          "shacl:minCount": "[(21,4)-(21,14)]",
          "#35": "[(6,4)-(8,5)]"
        }
      }
    },
    {
      "@id": "#37",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#operator"
        }
      ],
      "raml-shapes:range": {
        "@id": "#38"
      },
      "shacl:minCount": 1,
      "shacl:name": "operator",
      "smaps": {
        "inheritance-provenance": {
          "#37": "amf://id#18"
        },
        "lexical": {
          "shacl:minCount": "[(22,4)-(22,14)]",
          "#37": "[(9,4)-(11,5)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#10"
      },
      "doc:reference-id": [
        {
          "@id": "#7"
        }
      ],
      "doc:location": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/examples/CreateApplicationRequest.json",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "#9": "[(1,0)-(1,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\r\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\r\n\r\n  \"expensesLiving\": {\r\n    \"type\": \"object\"\r\n  },\r\n  \"fullAddress\": {\r\n    \"type\": \"object\"\r\n  },\r\n  \"applicant\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"addresses\": {\r\n        \"allOf\": [\r\n          {\r\n            \"$ref\": \"#/fullAddress\"\r\n          }\r\n        ]\r\n      },\r\n      \"expenses\": {\r\n        \"anyOf\": [\r\n          {\r\n            \"$ref\": \"#/expensesLiving\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#4": "[(1,0)-(29,1)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#21"
        },
        {
          "@id": "#25"
        }
      ],
      "shacl:name": "applicant",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#20": "[(10,2)-(28,3)]"
        },
        "type-property-lexical-info": {
          "#20": "[(11,4)-(11,10)]"
        }
      }
    },
    {
      "@id": "#30",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#31"
        },
        {
          "@id": "#33"
        }
      ],
      "shacl:name": "applicant",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#30": "[(10,2)-(28,3)]"
        },
        "type-property-lexical-info": {
          "#30": "[(11,4)-(11,10)]"
        }
      }
    },
    {
      "@id": "#36",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "merchant",
      "smaps": {
        "type-property-lexical-info": {
          "#36": "[(7,6)-(7,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(7,6)-(7,22)]",
          "#36": "[(6,4)-(8,5)]"
        }
      }
    },
    {
      "@id": "#38",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "operator",
      "smaps": {
        "type-property-lexical-info": {
          "#38": "[(10,6)-(10,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(10,6)-(10,22)]",
          "#38": "[(9,4)-(11,5)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:additionalApplicants": {
        "@id": "#11"
      },
      "data:merchant": {
        "@id": "#16"
      },
      "data:operator": {
        "@id": "#17"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:operator": "[(11,2)-(11,31)]",
          "data:additionalApplicants": "[(2,2)-(9,3)]",
          "#10": "[(1,0)-(12,1)]",
          "data:merchant": "[(10,2)-(10,30)]"
        },
        "parsed-json-example": {
          "#10": "{\n  \"additionalApplicants\": {\n    \"addresses\": {\n      \"randomKey\": \"Current\"\n    },\n    \"expenses\": {\n      \"otherRandomKey\": \"Basic\"\n    }\n  },\n  \"merchant\": \"STRATTON - QLD\",\n  \"operator\": \"kenandrajog_adm\"\n}"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#addresses"
        }
      ],
      "raml-shapes:range": {
        "@id": "#22"
      },
      "shacl:minCount": 0,
      "shacl:name": "addresses",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#21": "[(13,6)-(19,7)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#expenses"
        }
      ],
      "raml-shapes:range": {
        "@id": "#26"
      },
      "shacl:minCount": 0,
      "shacl:name": "expenses",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#25": "[(20,6)-(26,7)]"
        }
      }
    },
    {
      "@id": "#31",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#addresses"
        }
      ],
      "raml-shapes:range": {
        "@id": "#32"
      },
      "shacl:minCount": 0,
      "shacl:name": "addresses",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#31": "[(13,6)-(19,7)]"
        }
      }
    },
    {
      "@id": "#33",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#expenses"
        }
      ],
      "raml-shapes:range": {
        "@id": "#34"
      },
      "shacl:minCount": 0,
      "shacl:name": "expenses",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#33": "[(20,6)-(26,7)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:addresses": {
        "@id": "#12"
      },
      "data:expenses": {
        "@id": "#14"
      },
      "core:name": "additionalApplicants",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:expenses": "[(6,4)-(8,5)]",
          "#11": "[(2,26)-(9,3)]",
          "data:addresses": "[(3,4)-(5,5)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "STRATTON - QLD",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "merchant",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#16": "[(10,14)-(10,30)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "kenandrajog_adm",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "operator",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#17": "[(11,14)-(11,31)]"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "addresses",
      "shacl:and": [
        {
          "@id": "#23"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:and": "[(14,8)-(18,9)]",
          "#22": "[(13,6)-(19,7)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "expenses",
      "shacl:or": [
        {
          "@id": "#27"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:or": "[(21,8)-(25,9)]",
          "#26": "[(20,6)-(26,7)]"
        }
      }
    },
    {
      "@id": "#32",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "addresses",
      "shacl:and": [
        {
          "@id": "#23"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:and": "[(14,8)-(18,9)]",
          "#32": "[(13,6)-(19,7)]"
        }
      }
    },
    {
      "@id": "#34",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "expenses",
      "shacl:or": [
        {
          "@id": "#27"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:or": "[(21,8)-(25,9)]",
          "#34": "[(20,6)-(26,7)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:randomKey": {
        "@id": "#13"
      },
      "core:name": "addresses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:randomKey": "[(4,6)-(4,28)]",
          "#12": "[(3,17)-(5,5)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:otherRandomKey": {
        "@id": "#15"
      },
      "core:name": "expenses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:otherRandomKey": "[(7,6)-(7,31)]",
          "#14": "[(6,16)-(8,5)]"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [],
      "doc:recursive": true,
      "shacl:name": "fullAddress",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#23": "amf://id#24"
        },
        "lexical": {
          "#23": "[(7,2)-(9,3)]"
        },
        "type-property-lexical-info": {
          "#23": "[(8,4)-(8,10)]"
        },
        "resolved-link-target": {
          "#23": "amf://id#23"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [],
      "doc:recursive": true,
      "shacl:name": "expensesLiving",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#27": "amf://id#28"
        },
        "lexical": {
          "#27": "[(4,2)-(6,3)]"
        },
        "type-property-lexical-info": {
          "#27": "[(5,4)-(5,10)]"
        },
        "resolved-link-target": {
          "#27": "amf://id#27"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Current",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "randomKey",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#13": "[(4,19)-(4,28)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Basic",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "otherRandomKey",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#15": "[(7,24)-(7,31)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
